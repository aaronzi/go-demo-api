definitions:
  internal_api.APIMovie:
    properties:
      director:
        type: string
      id:
        type: string
      title:
        type: string
      year:
        type: integer
    type: object
  internal_api.APIUser:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /health:
    get:
      description: Responds with OK if the service is up and running
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health Check
      tags:
      - health
  /login:
    post:
      consumes:
      - multipart/form-data
      description: Logs in a user by identifier (username or email) and password,
        and returns a JWT token if successful.
      parameters:
      - description: Username or Email
        in: formData
        name: identifier
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: JWT Token
          schema:
            type: string
        "400":
          description: Missing required field(s) or bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - users
  /movies:
    get:
      description: Get all movies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/internal_api.APIMovie'
            type: array
      summary: Retrieve list of movies
      tags:
      - movies
  /movies/{id}:
    get:
      consumes:
      - application/json
      description: Get a single movie by its ID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_api.APIMovie'
        "404":
          description: Movie not found
      summary: Get a movie
      tags:
      - movies
  /users/register:
    post:
      consumes:
      - application/json
      description: Registers a new user with the provided username, email, and password.
      parameters:
      - description: User to register
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_api.APIUser'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully registered the user
          schema:
            type: string
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Register a new user
      tags:
      - users
  /verify:
    get:
      consumes:
      - application/json
      description: Verifies a user using base64 URL encoded email and verification
        code.
      parameters:
      - description: Base64 URL Encoded Email
        in: query
        name: email
        required: true
        type: string
      - description: Base64 URL Encoded Verification Code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User verified successfully
          schema:
            type: string
        "400":
          description: Invalid email or code
          schema:
            type: string
        "500":
          description: Verification failed
          schema:
            type: string
      summary: Verify user
      tags:
      - verification
swagger: "2.0"
